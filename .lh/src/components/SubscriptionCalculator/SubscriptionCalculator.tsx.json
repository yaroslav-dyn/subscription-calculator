{
    "sourceFile": "src/components/SubscriptionCalculator/SubscriptionCalculator.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1756975394785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756975574543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n   const removeSubscription = (id) => {\n     setSubscriptions(subscriptions.filter(sub => sub.id !== id));\n   };\n \n-  const updateSubscription = (id, field, value) => {\n+  const updateSubscription = (id: any, field: any, value: any) => {\n     setSubscriptions(subscriptions.map(sub =>\n       sub.id === id ? { ...sub, [field]: value } : sub\n     ));\n   };\n"
                },
                {
                    "date": 1756975601733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,564 @@\n+import React, { useState, useEffect } from 'react';\n+import { Calculator, Plus, Trash2, DollarSign, TrendingUp, PieChart, BarChart3, AlertCircle, Target, Globe, Clock, Bell } from 'lucide-react';\n+import './caclulator.css'\n+\n+const SubscriptionCalculator = () => {\n+  const [subscriptions, setSubscriptions] = useState([]);\n+  const [domains, setDomains] = useState([]);\n+  const [showAddForm, setShowAddForm] = useState(false);\n+  const [showDomainForm, setShowDomainForm] = useState(false);\n+  const [projectionYears, setProjectionYears] = useState(5);\n+  const [currency, setCurrency] = useState('USD');\n+\n+  const [newSub, setNewSub] = useState({\n+    name: '',\n+    price: '',\n+    period: 'monthly',\n+    isCustom: true\n+  });\n+\n+  const [newDomain, setNewDomain] = useState({\n+    name: '',\n+    provider: 'Cloudflare',\n+    expiryDate: '',\n+    renewalCost: '',\n+    autoRenewal: false\n+  });\n+\n+  const popularServices = [\n+    { name: 'Netflix', price: 15.49, period: 'monthly' },\n+    { name: 'Spotify', price: 10.99, period: 'monthly' },\n+    { name: 'Disney+', price: 7.99, period: 'monthly' },\n+    { name: 'Amazon Prime', price: 139, period: 'yearly' },\n+    { name: 'Apple Music', price: 10.99, period: 'monthly' },\n+    { name: 'YouTube Premium', price: 13.99, period: 'monthly' },\n+    { name: 'Adobe Creative Cloud', price: 52.99, period: 'monthly' },\n+    { name: 'Microsoft 365', price: 69.99, period: 'yearly' },\n+    { name: 'Dropbox', price: 9.99, period: 'monthly' },\n+    { name: 'Canva Pro', price: 119.99, period: 'yearly' }\n+  ];\n+\n+  const periods = {\n+    weekly: { multiplier: 52, label: 'Weekly' },\n+    monthly: { multiplier: 12, label: 'Monthly' },\n+    quarterly: { multiplier: 4, label: 'Quarterly' },\n+    'half-yearly': { multiplier: 2, label: 'Half-yearly' },\n+    yearly: { multiplier: 1, label: 'Yearly' }\n+  };\n+\n+  const currencies = {\n+    USD: { symbol: '$', rate: 1 },\n+    EUR: { symbol: '€', rate: 0.85 },\n+    UAH: { symbol: '₴', rate: 37 }\n+  };\n+\n+  const formatCurrency = (amount: number) => {\n+    const symbol = currencies[currency].symbol;\n+    const convertedAmount = amount * currencies[currency].rate;\n+    return `${symbol}${convertedAmount.toFixed(2)}`;\n+  };\n+\n+  const calculateYearlyCost = (price, period) => {\n+    return price * periods[period].multiplier;\n+  };\n+\n+  const addSubscription = (service) => {\n+    const id = Date.now() + Math.random();\n+    setSubscriptions([...subscriptions, { ...service, id }]);\n+  };\n+\n+  const addCustomSubscription = () => {\n+    if (newSub.name && newSub.price) {\n+      addSubscription({\n+        ...newSub,\n+        price: parseFloat(newSub.price),\n+        id: Date.now()\n+      });\n+      setNewSub({ name: '', price: '', period: 'monthly', isCustom: true });\n+      setShowAddForm(false);\n+    }\n+  };\n+\n+  const addDomain = () => {\n+    if (newDomain.name && newDomain.expiryDate) {\n+      const id = Date.now() + Math.random();\n+      setDomains([...domains, { ...newDomain, id, renewalCost: parseFloat(newDomain.renewalCost) || 0 }]);\n+      setNewDomain({ name: '', provider: 'Cloudflare', expiryDate: '', renewalCost: '', autoRenewal: false });\n+      setShowDomainForm(false);\n+    }\n+  };\n+\n+  const removeDomain = (id) => {\n+    setDomains(domains.filter(domain => domain.id !== id));\n+  };\n+\n+  const getDaysUntilExpiry = (expiryDate) => {\n+    const today = new Date();\n+    const expiry = new Date(expiryDate);\n+    const diffTime = expiry - today;\n+    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n+    return diffDays;\n+  };\n+\n+  const getExpiringDomains = () => {\n+    return domains.filter(domain => {\n+      const daysLeft = getDaysUntilExpiry(domain.expiryDate);\n+      return daysLeft <= 30 && daysLeft >= 0;\n+    }).sort((a, b) => getDaysUntilExpiry(a.expiryDate) - getDaysUntilExpiry(b.expiryDate));\n+  };\n+\n+  const getStatusColor = (daysLeft) => {\n+    if (daysLeft < 0) return 'text-gray-400'; // Expired\n+    if (daysLeft <= 1) return 'text-red-400'; // Critical\n+    if (daysLeft <= 7) return 'text-orange-400'; // Warning\n+    if (daysLeft <= 30) return 'text-yellow-400'; // Attention\n+    return 'text-green-400'; // Safe\n+  };\n+\n+  const getStatusBg = (daysLeft) => {\n+    if (daysLeft < 0) return 'bg-gray-500/20';\n+    if (daysLeft <= 1) return 'bg-red-500/20';\n+    if (daysLeft <= 7) return 'bg-orange-500/20';\n+    if (daysLeft <= 30) return 'bg-yellow-500/20';\n+    return 'bg-green-500/20';\n+  };\n+\n+  const removeSubscription = (id: string | number) => {\n+    setSubscriptions(subscriptions.filter(sub => sub.id !== id));\n+  };\n+\n+  const updateSubscription = (id: any, field: any, value: any) => {\n+    setSubscriptions(subscriptions.map(sub =>\n+      sub.id === id ? { ...sub, [field]: value } : sub\n+    ));\n+  };\n+\n+  const getTotalCosts = () => {\n+    const yearlyTotal = subscriptions.reduce((total, sub) => {\n+      return total + calculateYearlyCost(sub.price, sub.period);\n+    }, 0);\n+\n+    return {\n+      yearly: yearlyTotal,\n+      projection: yearlyTotal * projectionYears,\n+      monthly: yearlyTotal / 12\n+    };\n+  };\n+\n+  const getInsights = () => {\n+    const totals = getTotalCosts();\n+    const vacationCost = 3000; // Average vacation cost\n+    const yearsForVacation = Math.ceil(vacationCost / totals.yearly);\n+\n+    return {\n+      vacationEquivalent: yearsForVacation,\n+      dailyCost: totals.yearly / 365,\n+      coffeeEquivalent: Math.floor(totals.yearly / (5 * 365)) // $5 coffee\n+    };\n+  };\n+\n+  return (\n+    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 p-4\">\n+      {/* Background Elements */}\n+      <div className=\"absolute min-h-screen inset-0\">\n+        <div className=\"absolute top-1/4 left-1/4 w-72 h-72 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse\"></div>\n+        <div className=\"absolute top-3/4 right-1/4 w-72 h-72 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse delay-1000\"></div>\n+        <div className=\"absolute bottom-1/4 left-1/3 w-72 h-72 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse delay-2000\"></div>\n+      </div>\n+\n+      <div className=\"relative max-w-6xl mx-auto\">\n+        {/* Header */}\n+        <div className=\"text-center mb-8\">\n+          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-purple-400 to-pink-400 rounded-2xl mb-4 shadow-lg\">\n+            <Calculator className=\"w-8 h-8 text-white\" />\n+          </div>\n+          <h1 className=\"text-4xl font-bold text-white mb-2\">Subscription Cost Calculator</h1>\n+          <p className=\"text-white/70\">Discover the true lifetime cost of your subscriptions</p>\n+        </div>\n+\n+        <div className=\"grid lg:grid-cols-3 gap-6\">\n+          {/* Left Column - Controls */}\n+          <div className=\"lg:col-span-1 space-y-6\">\n+            {/* Currency & Projection Settings */}\n+            <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n+              <h3 className=\"text-white font-semibold mb-4 flex items-center\">\n+                <Target className=\"w-5 h-5 mr-2\" />\n+                Settings\n+              </h3>\n+\n+              <div className=\"space-y-4\">\n+                <div>\n+                  <label className=\"text-white/90 text-sm mb-2 block\">Currency</label>\n+                  <select\n+                    value={currency}\n+                    onChange={(e) => setCurrency(e.target.value)}\n+                    className=\"w-full px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-400\"\n+                  >\n+                    <option value=\"USD\">USD ($)</option>\n+                    <option value=\"EUR\">EUR (€)</option>\n+                    <option value=\"UAH\">UAH (₴)</option>\n+                  </select>\n+                </div>\n+\n+                <div>\n+                  <label className=\"text-white/90 text-sm mb-2 block\">\n+                    Projection Years: {projectionYears}\n+                  </label>\n+                  <input\n+                    type=\"range\"\n+                    min=\"1\"\n+                    max=\"50\"\n+                    value={projectionYears}\n+                    onChange={(e) => setProjectionYears(parseInt(e.target.value))}\n+                    className=\"w-full h-2 bg-white/20 rounded-lg appearance-none slider\"\n+                  />\n+                  <div className=\"flex justify-between text-white/60 text-xs mt-1\">\n+                    <span>1yr</span>\n+                    <span>50yrs</span>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+\n+            {/*SECTION: Popular Services */}\n+            <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n+              <h3 className=\"text-white font-semibold mb-4 flex items-center\">\n+                <Plus className=\"w-5 h-5 mr-2\" />\n+                Popular Services\n+              </h3>\n+\n+              <div className=\"space-y-2 max-h-64 overflow-y-auto overflow-x-hidden\">\n+                {popularServices.map((service, index) => (\n+                  <button\n+                    key={index}\n+                    onClick={() => addSubscription(service)}\n+                    className=\"w-full p-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white text-left hover:bg-white/20 transition-all duration-300 hover:scale-95\"\n+                  >\n+                    <div className=\"flex justify-between items-center\">\n+                      <span className=\"font-medium\">{service.name}</span>\n+                      <span className=\"text-sm text-white/80\">\n+                        {formatCurrency(service.price)}/{service.period}\n+                      </span>\n+                    </div>\n+                  </button>\n+                ))}\n+              </div>\n+            </div>\n+\n+            {/* Add Custom Subscription */}\n+            <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n+              <button\n+                onClick={() => setShowAddForm(!showAddForm)}\n+                className=\"w-full flex items-center justify-center p-3 bg-gradient-to-r from-purple-500/30 to-pink-500/30 rounded-xl text-white hover:from-purple-500/40 hover:to-pink-500/40 transition-all duration-300\"\n+              >\n+                <Plus className=\"w-5 h-5 mr-2\" />\n+                Add Custom Subscription\n+              </button>\n+\n+              {showAddForm && (\n+                <div className=\"mt-4 space-y-3\">\n+                  <input\n+                    type=\"text\"\n+                    placeholder=\"Service name\"\n+                    value={newSub.name}\n+                    onChange={(e) => setNewSub({ ...newSub, name: e.target.value })}\n+                    className=\"w-full px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-purple-400\"\n+                  />\n+                  <div className=\"flex gap-2\">\n+                    <input\n+                      type=\"number\"\n+                      placeholder=\"Price\"\n+                      value={newSub.price}\n+                      onChange={(e) => setNewSub({ ...newSub, price: e.target.value })}\n+                      className=\"flex-1 px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-purple-400\"\n+                    />\n+                    <select\n+                      value={newSub.period}\n+                      onChange={(e) => setNewSub({ ...newSub, period: e.target.value })}\n+                      className=\"px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-400\"\n+                    >\n+                      {Object.entries(periods).map(([key, value]) => (\n+                        <option key={key} value={key}>{value.label}</option>\n+                      ))}\n+                    </select>\n+                  </div>\n+                  <button\n+                    onClick={addCustomSubscription}\n+                    className=\"w-full p-2 bg-green-500/30 rounded-xl text-white hover:bg-green-500/40 transition-all duration-300\"\n+                  >\n+                    Add Subscription\n+                  </button>\n+                </div>\n+              )}\n+            </div>\n+\n+            {/* Domain Renewal Tracker */}\n+            <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n+              <h3 className=\"text-white font-semibold mb-4 flex items-center\">\n+                <Globe className=\"w-5 h-5 mr-2\" />\n+                Domain Renewals\n+              </h3>\n+\n+              {/* Expiring Domains Alert */}\n+              {getExpiringDomains().length > 0 && (\n+                <div className=\"mb-4 p-3 bg-red-500/20 border border-red-400/30 rounded-xl backdrop-blur-sm\">\n+                  <div className=\"flex items-center text-red-300 mb-2\">\n+                    <Bell className=\"w-4 h-4 mr-2\" />\n+                    <span className=\"font-medium\">Renewal Alerts</span>\n+                  </div>\n+                  {getExpiringDomains().map(domain => {\n+                    const daysLeft = getDaysUntilExpiry(domain.expiryDate);\n+                    return (\n+                      <div key={domain.id} className=\"text-sm text-white/90 mb-1\">\n+                        <strong>{domain.name}</strong> expires in {daysLeft === 0 ? 'TODAY' : daysLeft === 1 ? 'TOMORROW' : `${daysLeft} days`}\n+                        {daysLeft === 1 && ' 🚨'}\n+                      </div>\n+                    );\n+                  })}\n+                </div>\n+              )}\n+\n+              <button\n+                onClick={() => setShowDomainForm(!showDomainForm)}\n+                className=\"w-full flex items-center justify-center p-3 bg-gradient-to-r from-blue-500/30 to-teal-500/30 rounded-xl text-white hover:from-blue-500/40 hover:to-teal-500/40 transition-all duration-300 mb-4\"\n+              >\n+                <Plus className=\"w-5 h-5 mr-2\" />\n+                Add Domain\n+              </button>\n+\n+              {showDomainForm && (\n+                <div className=\"space-y-3 mb-4\">\n+                  <input\n+                    type=\"text\"\n+                    placeholder=\"domain.com\"\n+                    value={newDomain.name}\n+                    onChange={(e) => setNewDomain({ ...newDomain, name: e.target.value })}\n+                    className=\"w-full px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n+                  />\n+                  <div className=\"flex flex-col gap-2\">\n+                    <select\n+                      value={newDomain.provider}\n+                      onChange={(e) => setNewDomain({ ...newDomain, provider: e.target.value })}\n+                      className=\"flex-1 px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-blue-400\"\n+                    >\n+                      <option value=\"Cloudflare\">Cloudflare</option>\n+                      <option value=\"GoDaddy\">GoDaddy</option>\n+                      <option value=\"Namecheap\">Namecheap</option>\n+                      <option value=\"Google Domains\">Google Domains</option>\n+                      <option value=\"Other\">Other</option>\n+                    </select>\n+                    <input\n+                      type=\"number\"\n+                      placeholder=\"Renewal cost\"\n+                      value={newDomain.renewalCost}\n+                      onChange={(e) => setNewDomain({ ...newDomain, renewalCost: e.target.value })}\n+                      className=\"flex-1 px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n+                    />\n+                  </div>\n+                  <input\n+                    type=\"date\"\n+                    value={newDomain.expiryDate}\n+                    onChange={(e) => setNewDomain({ ...newDomain, expiryDate: e.target.value })}\n+                    className=\"w-full px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-blue-400\"\n+                  />\n+                  <div className=\"flex items-center\">\n+                    <input\n+                      type=\"checkbox\"\n+                      id=\"autoRenewal\"\n+                      checked={newDomain.autoRenewal}\n+                      onChange={(e) => setNewDomain({ ...newDomain, autoRenewal: e.target.checked })}\n+                      className=\"mr-2\"\n+                    />\n+                    <label htmlFor=\"autoRenewal\" className=\"text-white/80 text-sm\">Auto-renewal enabled</label>\n+                  </div>\n+                  <button\n+                    onClick={addDomain}\n+                    className=\"w-full p-2 bg-blue-500/30 rounded-xl text-white hover:bg-blue-500/40 transition-all duration-300\"\n+                  >\n+                    Add Domain\n+                  </button>\n+                </div>\n+              )}\n+\n+              {/* Domain List */}\n+              {domains.length > 0 && (\n+                <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n+                  {domains.map(domain => {\n+                    const daysLeft = getDaysUntilExpiry(domain.expiryDate);\n+                    const statusColor = getStatusColor(daysLeft);\n+                    const statusBg = getStatusBg(daysLeft);\n+\n+                    return (\n+                      <div key={domain.id} className={`p-3 ${statusBg} backdrop-blur-sm rounded-xl border border-white/20 relative`}>\n+                        <div className=\"flex justify-between items-start\">\n+                          <div className=\"flex-1\">\n+                            <div className=\"flex items-center gap-2 mb-1\">\n+                              <h4 className=\"text-white font-medium\">{domain.name}</h4>\n+                              {domain.autoRenewal && (\n+                                <span className=\"text-xs bg-green-500/30 text-green-300 px-2 py-1 rounded-full\">Auto</span>\n+                              )}\n+                            </div>\n+                            <p className=\"text-white/60 text-sm\">{domain.provider}</p>\n+                            <div className=\"flex items-center gap-4 mt-2\">\n+                              <span className={`text-sm font-medium ${statusColor}`}>\n+                                <Clock className=\"w-3 h-3 inline mr-1\" />\n+                                {daysLeft < 0 ? 'Expired' :\n+                                  daysLeft === 0 ? 'Expires Today!' :\n+                                    daysLeft === 1 ? 'Expires Tomorrow!' :\n+                                      `${daysLeft} days left`}\n+                              </span>\n+                              {domain.renewalCost > 0 && (\n+                                <span className=\"text-white/60 text-sm\">\n+                                  {formatCurrency(domain.renewalCost)}/year\n+                                </span>\n+                              )}\n+                            </div>\n+                          </div>\n+                          <button\n+                            onClick={() => removeDomain(domain.id)}\n+                            className=\"p-1 text-red-400 hover:bg-red-400/20 rounded-lg transition-all duration-300\"\n+                          >\n+                            <Trash2 className=\"w-4 h-4\" />\n+                          </button>\n+                        </div>\n+                      </div>\n+                    );\n+                  })}\n+                </div>\n+              )}\n+            </div>\n+          </div>\n+\n+          {/* Right Column - Results */}\n+          <div className=\"lg:col-span-2 space-y-6\">\n+            {/* Current Subscriptions */}\n+            {subscriptions.length > 0 && (\n+              <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n+                <h3 className=\"text-white font-semibold mb-4 flex items-center\">\n+                  <BarChart3 className=\"w-5 h-5 mr-2\" />\n+                  Your Subscriptions\n+                </h3>\n+\n+                <div className=\"space-y-3\">\n+                  {subscriptions.map((sub) => {\n+                    const yearlyCost = calculateYearlyCost(sub.price, sub.period);\n+                    return (\n+                      <div key={sub.id} className=\"p-4 bg-white/10 backdrop-blur-sm rounded-xl border border-white/20\">\n+                        <div className=\"flex justify-between items-start mb-2\">\n+                          <div className=\"flex-1\">\n+                            <h4 className=\"text-white font-medium\">{sub.name}</h4>\n+                            <p className=\"text-white/60 text-sm\">\n+                              {formatCurrency(sub.price)} per {sub.period}\n+                            </p>\n+                          </div>\n+                          <button\n+                            onClick={() => removeSubscription(sub.id)}\n+                            className=\"p-2 text-red-400 hover:bg-red-400/20 rounded-lg transition-all duration-300\"\n+                          >\n+                            <Trash2 className=\"w-4 h-4\" />\n+                          </button>\n+                        </div>\n+                        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n+                          <div className=\"text-center p-2 bg-white/10 rounded-lg\">\n+                            <p className=\"text-white/60\">Yearly Cost</p>\n+                            <p className=\"text-white font-semibold\">{formatCurrency(yearlyCost)}</p>\n+                          </div>\n+                          <div className=\"text-center p-2 bg-white/10 rounded-lg\">\n+                            <p className=\"text-white/60\">{projectionYears}yr Total</p>\n+                            <p className=\"text-white font-semibold\">{formatCurrency(yearlyCost * projectionYears)}</p>\n+                          </div>\n+                        </div>\n+                      </div>\n+                    );\n+                  })}\n+                </div>\n+              </div>\n+            )}\n+\n+            {/* Total Summary */}\n+            {subscriptions.length > 0 && (\n+              <div className=\"backdrop-blur-lg bg-gradient-to-br from-white/20 to-white/10 border border-white/30 rounded-2xl p-6 shadow-xl\">\n+                <h3 className=\"text-white font-semibold mb-6 flex items-center text-xl\">\n+                  <TrendingUp className=\"w-6 h-6 mr-2\" />\n+                  Cost Summary\n+                </h3>\n+\n+                <div className=\"grid md:grid-cols-3 gap-4 mb-6\">\n+                  <div className=\"text-center p-4 bg-white/10 rounded-xl backdrop-blur-sm\">\n+                    <p className=\"text-white/80 text-sm mb-1\">Monthly Total</p>\n+                    <p className=\"text-2xl font-bold text-green-300\">{formatCurrency(getTotalCosts().monthly)}</p>\n+                  </div>\n+                  <div className=\"text-center p-4 bg-white/10 rounded-xl backdrop-blur-sm\">\n+                    <p className=\"text-white/80 text-sm mb-1\">Yearly Total</p>\n+                    <p className=\"text-2xl font-bold text-blue-300\">{formatCurrency(getTotalCosts().yearly)}</p>\n+                  </div>\n+                  <div className=\"text-center p-4 bg-gradient-to-r from-purple-500/30 to-pink-500/30 rounded-xl backdrop-blur-sm border border-white/20\">\n+                    <p className=\"text-white/80 text-sm mb-1\">{projectionYears}-Year Total</p>\n+                    <p className=\"text-3xl font-bold text-white\">{formatCurrency(getTotalCosts().projection)}</p>\n+                  </div>\n+                </div>\n+\n+                {/* Insights */}\n+                <div className=\"backdrop-blur-sm bg-white/10 rounded-xl p-4 border border-white/20\">\n+                  <h4 className=\"text-white font-medium mb-3 flex items-center\">\n+                    <AlertCircle className=\"w-5 h-5 mr-2\" />\n+                    Reality Check\n+                  </h4>\n+                  <div className=\"space-y-2 text-white/80\">\n+                    <p>💰 You spend <strong>{formatCurrency(getInsights().dailyCost)}</strong> per day on subscriptions</p>\n+                    <p>✈️ Your subscriptions cost equals a vacation every <strong>{getInsights().vacationEquivalent}</strong> years</p>\n+                    <p>☕ That's like buying <strong>{getInsights().coffeeEquivalent}</strong> coffees per day</p>\n+                  </div>\n+                </div>\n+              </div>\n+            )}\n+\n+            {/* Empty State */}\n+            {subscriptions.length === 0 && (\n+              <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-12 shadow-xl text-center\">\n+                <PieChart className=\"w-16 h-16 text-white/40 mx-auto mb-4\" />\n+                <h3 className=\"text-white text-xl font-semibold mb-2\">No Subscriptions Yet</h3>\n+                <p className=\"text-white/70 mb-6\">Add your first subscription to see the lifetime cost analysis</p>\n+                <button\n+                  onClick={() => setShowAddForm(true)}\n+                  className=\"px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl text-white font-medium hover:from-purple-600 hover:to-pink-600 transition-all duration-300 transform hover:scale-105\"\n+                >\n+                  Get Started\n+                </button>\n+              </div>\n+            )}\n+          </div>\n+        </div>\n+      </div>\n+\n+      {/* <style jsx={true}>{`\n+        .slider::-webkit-slider-thumb {\n+          appearance: none;\n+          width: 20px;\n+          height: 20px;\n+          border-radius: 50%;\n+          background: linear-gradient(135deg, #8b5cf6, #ec4899);\n+          cursor: pointer;\n+          box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3);\n+        }\n+        \n+        .slider::-moz-range-thumb {\n+          width: 20px;\n+          height: 20px;\n+          border-radius: 50%;\n+          background: linear-gradient(135deg, #8b5cf6, #ec4899);\n+          cursor: pointer;\n+          border: none;\n+          box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3);\n+        }\n+        \n+        option {\n+          background: #1e1b4b;\n+          color: white;\n+        }\n+      `}</style> */}\n+    </div>\n+  );\n+};\n+\n+export default SubscriptionCalculator;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756976734814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React, { useState, useEffect } from 'react';\n import { Calculator, Plus, Trash2, DollarSign, TrendingUp, PieChart, BarChart3, AlertCircle, Target, Globe, Clock, Bell } from 'lucide-react';\n import './caclulator.css'\n+import { popularServices } from '../../store/subscriptionStore';\n \n const SubscriptionCalculator = () => {\n   const [subscriptions, setSubscriptions] = useState([]);\n   const [domains, setDomains] = useState([]);\n@@ -24,20 +25,8 @@\n     renewalCost: '',\n     autoRenewal: false\n   });\n \n-  const popularServices = [\n-    { name: 'Netflix', price: 15.49, period: 'monthly' },\n-    { name: 'Spotify', price: 10.99, period: 'monthly' },\n-    { name: 'Disney+', price: 7.99, period: 'monthly' },\n-    { name: 'Amazon Prime', price: 139, period: 'yearly' },\n-    { name: 'Apple Music', price: 10.99, period: 'monthly' },\n-    { name: 'YouTube Premium', price: 13.99, period: 'monthly' },\n-    { name: 'Adobe Creative Cloud', price: 52.99, period: 'monthly' },\n-    { name: 'Microsoft 365', price: 69.99, period: 'yearly' },\n-    { name: 'Dropbox', price: 9.99, period: 'monthly' },\n-    { name: 'Canva Pro', price: 119.99, period: 'yearly' }\n-  ];\n \n   const periods = {\n     weekly: { multiplier: 52, label: 'Weekly' },\n     monthly: { multiplier: 12, label: 'Monthly' },\n@@ -560,569 +549,5 @@\n     </div>\n   );\n };\n \n-export default SubscriptionCalculator;\n-import React, { useState, useEffect } from 'react';\n-import { Calculator, Plus, Trash2, DollarSign, TrendingUp, PieChart, BarChart3, AlertCircle, Target, Globe, Clock, Bell } from 'lucide-react';\n-import './caclulator.css'\n-\n-const SubscriptionCalculator = () => {\n-  const [subscriptions, setSubscriptions] = useState([]);\n-  const [domains, setDomains] = useState([]);\n-  const [showAddForm, setShowAddForm] = useState(false);\n-  const [showDomainForm, setShowDomainForm] = useState(false);\n-  const [projectionYears, setProjectionYears] = useState(5);\n-  const [currency, setCurrency] = useState('USD');\n-\n-  const [newSub, setNewSub] = useState({\n-    name: '',\n-    price: '',\n-    period: 'monthly',\n-    isCustom: true\n-  });\n-\n-  const [newDomain, setNewDomain] = useState({\n-    name: '',\n-    provider: 'Cloudflare',\n-    expiryDate: '',\n-    renewalCost: '',\n-    autoRenewal: false\n-  });\n-\n-  const popularServices = [\n-    { name: 'Netflix', price: 15.49, period: 'monthly' },\n-    { name: 'Spotify', price: 10.99, period: 'monthly' },\n-    { name: 'Disney+', price: 7.99, period: 'monthly' },\n-    { name: 'Amazon Prime', price: 139, period: 'yearly' },\n-    { name: 'Apple Music', price: 10.99, period: 'monthly' },\n-    { name: 'YouTube Premium', price: 13.99, period: 'monthly' },\n-    { name: 'Adobe Creative Cloud', price: 52.99, period: 'monthly' },\n-    { name: 'Microsoft 365', price: 69.99, period: 'yearly' },\n-    { name: 'Dropbox', price: 9.99, period: 'monthly' },\n-    { name: 'Canva Pro', price: 119.99, period: 'yearly' }\n-  ];\n-\n-  const periods = {\n-    weekly: { multiplier: 52, label: 'Weekly' },\n-    monthly: { multiplier: 12, label: 'Monthly' },\n-    quarterly: { multiplier: 4, label: 'Quarterly' },\n-    'half-yearly': { multiplier: 2, label: 'Half-yearly' },\n-    yearly: { multiplier: 1, label: 'Yearly' }\n-  };\n-\n-  const currencies = {\n-    USD: { symbol: '$', rate: 1 },\n-    EUR: { symbol: '€', rate: 0.85 },\n-    UAH: { symbol: '₴', rate: 37 }\n-  };\n-\n-  const formatCurrency = (amount: number) => {\n-    const symbol = currencies[currency].symbol;\n-    const convertedAmount = amount * currencies[currency].rate;\n-    return `${symbol}${convertedAmount.toFixed(2)}`;\n-  };\n-\n-  const calculateYearlyCost = (price, period) => {\n-    return price * periods[period].multiplier;\n-  };\n-\n-  const addSubscription = (service) => {\n-    const id = Date.now() + Math.random();\n-    setSubscriptions([...subscriptions, { ...service, id }]);\n-  };\n-\n-  const addCustomSubscription = () => {\n-    if (newSub.name && newSub.price) {\n-      addSubscription({\n-        ...newSub,\n-        price: parseFloat(newSub.price),\n-        id: Date.now()\n-      });\n-      setNewSub({ name: '', price: '', period: 'monthly', isCustom: true });\n-      setShowAddForm(false);\n-    }\n-  };\n-\n-  const addDomain = () => {\n-    if (newDomain.name && newDomain.expiryDate) {\n-      const id = Date.now() + Math.random();\n-      setDomains([...domains, { ...newDomain, id, renewalCost: parseFloat(newDomain.renewalCost) || 0 }]);\n-      setNewDomain({ name: '', provider: 'Cloudflare', expiryDate: '', renewalCost: '', autoRenewal: false });\n-      setShowDomainForm(false);\n-    }\n-  };\n-\n-  const removeDomain = (id) => {\n-    setDomains(domains.filter(domain => domain.id !== id));\n-  };\n-\n-  const getDaysUntilExpiry = (expiryDate) => {\n-    const today = new Date();\n-    const expiry = new Date(expiryDate);\n-    const diffTime = expiry - today;\n-    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n-    return diffDays;\n-  };\n-\n-  const getExpiringDomains = () => {\n-    return domains.filter(domain => {\n-      const daysLeft = getDaysUntilExpiry(domain.expiryDate);\n-      return daysLeft <= 30 && daysLeft >= 0;\n-    }).sort((a, b) => getDaysUntilExpiry(a.expiryDate) - getDaysUntilExpiry(b.expiryDate));\n-  };\n-\n-  const getStatusColor = (daysLeft) => {\n-    if (daysLeft < 0) return 'text-gray-400'; // Expired\n-    if (daysLeft <= 1) return 'text-red-400'; // Critical\n-    if (daysLeft <= 7) return 'text-orange-400'; // Warning\n-    if (daysLeft <= 30) return 'text-yellow-400'; // Attention\n-    return 'text-green-400'; // Safe\n-  };\n-\n-  const getStatusBg = (daysLeft) => {\n-    if (daysLeft < 0) return 'bg-gray-500/20';\n-    if (daysLeft <= 1) return 'bg-red-500/20';\n-    if (daysLeft <= 7) return 'bg-orange-500/20';\n-    if (daysLeft <= 30) return 'bg-yellow-500/20';\n-    return 'bg-green-500/20';\n-  };\n-\n-  const removeSubscription = (id) => {\n-    setSubscriptions(subscriptions.filter(sub => sub.id !== id));\n-  };\n-\n-  const updateSubscription = (id: any, field: any, value: any) => {\n-    setSubscriptions(subscriptions.map(sub =>\n-      sub.id === id ? { ...sub, [field]: value } : sub\n-    ));\n-  };\n-\n-  const getTotalCosts = () => {\n-    const yearlyTotal = subscriptions.reduce((total, sub) => {\n-      return total + calculateYearlyCost(sub.price, sub.period);\n-    }, 0);\n-\n-    return {\n-      yearly: yearlyTotal,\n-      projection: yearlyTotal * projectionYears,\n-      monthly: yearlyTotal / 12\n-    };\n-  };\n-\n-  const getInsights = () => {\n-    const totals = getTotalCosts();\n-    const vacationCost = 3000; // Average vacation cost\n-    const yearsForVacation = Math.ceil(vacationCost / totals.yearly);\n-\n-    return {\n-      vacationEquivalent: yearsForVacation,\n-      dailyCost: totals.yearly / 365,\n-      coffeeEquivalent: Math.floor(totals.yearly / (5 * 365)) // $5 coffee\n-    };\n-  };\n-\n-  return (\n-    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 p-4\">\n-      {/* Background Elements */}\n-      <div className=\"absolute min-h-screen inset-0\">\n-        <div className=\"absolute top-1/4 left-1/4 w-72 h-72 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse\"></div>\n-        <div className=\"absolute top-3/4 right-1/4 w-72 h-72 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse delay-1000\"></div>\n-        <div className=\"absolute bottom-1/4 left-1/3 w-72 h-72 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse delay-2000\"></div>\n-      </div>\n-\n-      <div className=\"relative max-w-6xl mx-auto\">\n-        {/* Header */}\n-        <div className=\"text-center mb-8\">\n-          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-purple-400 to-pink-400 rounded-2xl mb-4 shadow-lg\">\n-            <Calculator className=\"w-8 h-8 text-white\" />\n-          </div>\n-          <h1 className=\"text-4xl font-bold text-white mb-2\">Subscription Cost Calculator</h1>\n-          <p className=\"text-white/70\">Discover the true lifetime cost of your subscriptions</p>\n-        </div>\n-\n-        <div className=\"grid lg:grid-cols-3 gap-6\">\n-          {/* Left Column - Controls */}\n-          <div className=\"lg:col-span-1 space-y-6\">\n-            {/* Currency & Projection Settings */}\n-            <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n-              <h3 className=\"text-white font-semibold mb-4 flex items-center\">\n-                <Target className=\"w-5 h-5 mr-2\" />\n-                Settings\n-              </h3>\n-\n-              <div className=\"space-y-4\">\n-                <div>\n-                  <label className=\"text-white/90 text-sm mb-2 block\">Currency</label>\n-                  <select\n-                    value={currency}\n-                    onChange={(e) => setCurrency(e.target.value)}\n-                    className=\"w-full px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-400\"\n-                  >\n-                    <option value=\"USD\">USD ($)</option>\n-                    <option value=\"EUR\">EUR (€)</option>\n-                    <option value=\"UAH\">UAH (₴)</option>\n-                  </select>\n-                </div>\n-\n-                <div>\n-                  <label className=\"text-white/90 text-sm mb-2 block\">\n-                    Projection Years: {projectionYears}\n-                  </label>\n-                  <input\n-                    type=\"range\"\n-                    min=\"1\"\n-                    max=\"50\"\n-                    value={projectionYears}\n-                    onChange={(e) => setProjectionYears(parseInt(e.target.value))}\n-                    className=\"w-full h-2 bg-white/20 rounded-lg appearance-none slider\"\n-                  />\n-                  <div className=\"flex justify-between text-white/60 text-xs mt-1\">\n-                    <span>1yr</span>\n-                    <span>50yrs</span>\n-                  </div>\n-                </div>\n-              </div>\n-            </div>\n-\n-            {/*SECTION: Popular Services */}\n-            <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n-              <h3 className=\"text-white font-semibold mb-4 flex items-center\">\n-                <Plus className=\"w-5 h-5 mr-2\" />\n-                Popular Services\n-              </h3>\n-\n-              <div className=\"space-y-2 max-h-64 overflow-y-auto overflow-x-hidden\">\n-                {popularServices.map((service, index) => (\n-                  <button\n-                    key={index}\n-                    onClick={() => addSubscription(service)}\n-                    className=\"w-full p-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white text-left hover:bg-white/20 transition-all duration-300 hover:scale-95\"\n-                  >\n-                    <div className=\"flex justify-between items-center\">\n-                      <span className=\"font-medium\">{service.name}</span>\n-                      <span className=\"text-sm text-white/80\">\n-                        {formatCurrency(service.price)}/{service.period}\n-                      </span>\n-                    </div>\n-                  </button>\n-                ))}\n-              </div>\n-            </div>\n-\n-            {/* Add Custom Subscription */}\n-            <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n-              <button\n-                onClick={() => setShowAddForm(!showAddForm)}\n-                className=\"w-full flex items-center justify-center p-3 bg-gradient-to-r from-purple-500/30 to-pink-500/30 rounded-xl text-white hover:from-purple-500/40 hover:to-pink-500/40 transition-all duration-300\"\n-              >\n-                <Plus className=\"w-5 h-5 mr-2\" />\n-                Add Custom Subscription\n-              </button>\n-\n-              {showAddForm && (\n-                <div className=\"mt-4 space-y-3\">\n-                  <input\n-                    type=\"text\"\n-                    placeholder=\"Service name\"\n-                    value={newSub.name}\n-                    onChange={(e) => setNewSub({ ...newSub, name: e.target.value })}\n-                    className=\"w-full px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-purple-400\"\n-                  />\n-                  <div className=\"flex gap-2\">\n-                    <input\n-                      type=\"number\"\n-                      placeholder=\"Price\"\n-                      value={newSub.price}\n-                      onChange={(e) => setNewSub({ ...newSub, price: e.target.value })}\n-                      className=\"flex-1 px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-purple-400\"\n-                    />\n-                    <select\n-                      value={newSub.period}\n-                      onChange={(e) => setNewSub({ ...newSub, period: e.target.value })}\n-                      className=\"px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-400\"\n-                    >\n-                      {Object.entries(periods).map(([key, value]) => (\n-                        <option key={key} value={key}>{value.label}</option>\n-                      ))}\n-                    </select>\n-                  </div>\n-                  <button\n-                    onClick={addCustomSubscription}\n-                    className=\"w-full p-2 bg-green-500/30 rounded-xl text-white hover:bg-green-500/40 transition-all duration-300\"\n-                  >\n-                    Add Subscription\n-                  </button>\n-                </div>\n-              )}\n-            </div>\n-\n-            {/* Domain Renewal Tracker */}\n-            <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n-              <h3 className=\"text-white font-semibold mb-4 flex items-center\">\n-                <Globe className=\"w-5 h-5 mr-2\" />\n-                Domain Renewals\n-              </h3>\n-\n-              {/* Expiring Domains Alert */}\n-              {getExpiringDomains().length > 0 && (\n-                <div className=\"mb-4 p-3 bg-red-500/20 border border-red-400/30 rounded-xl backdrop-blur-sm\">\n-                  <div className=\"flex items-center text-red-300 mb-2\">\n-                    <Bell className=\"w-4 h-4 mr-2\" />\n-                    <span className=\"font-medium\">Renewal Alerts</span>\n-                  </div>\n-                  {getExpiringDomains().map(domain => {\n-                    const daysLeft = getDaysUntilExpiry(domain.expiryDate);\n-                    return (\n-                      <div key={domain.id} className=\"text-sm text-white/90 mb-1\">\n-                        <strong>{domain.name}</strong> expires in {daysLeft === 0 ? 'TODAY' : daysLeft === 1 ? 'TOMORROW' : `${daysLeft} days`}\n-                        {daysLeft === 1 && ' 🚨'}\n-                      </div>\n-                    );\n-                  })}\n-                </div>\n-              )}\n-\n-              <button\n-                onClick={() => setShowDomainForm(!showDomainForm)}\n-                className=\"w-full flex items-center justify-center p-3 bg-gradient-to-r from-blue-500/30 to-teal-500/30 rounded-xl text-white hover:from-blue-500/40 hover:to-teal-500/40 transition-all duration-300 mb-4\"\n-              >\n-                <Plus className=\"w-5 h-5 mr-2\" />\n-                Add Domain\n-              </button>\n-\n-              {showDomainForm && (\n-                <div className=\"space-y-3 mb-4\">\n-                  <input\n-                    type=\"text\"\n-                    placeholder=\"domain.com\"\n-                    value={newDomain.name}\n-                    onChange={(e) => setNewDomain({ ...newDomain, name: e.target.value })}\n-                    className=\"w-full px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n-                  />\n-                  <div className=\"flex flex-col gap-2\">\n-                    <select\n-                      value={newDomain.provider}\n-                      onChange={(e) => setNewDomain({ ...newDomain, provider: e.target.value })}\n-                      className=\"flex-1 px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-blue-400\"\n-                    >\n-                      <option value=\"Cloudflare\">Cloudflare</option>\n-                      <option value=\"GoDaddy\">GoDaddy</option>\n-                      <option value=\"Namecheap\">Namecheap</option>\n-                      <option value=\"Google Domains\">Google Domains</option>\n-                      <option value=\"Other\">Other</option>\n-                    </select>\n-                    <input\n-                      type=\"number\"\n-                      placeholder=\"Renewal cost\"\n-                      value={newDomain.renewalCost}\n-                      onChange={(e) => setNewDomain({ ...newDomain, renewalCost: e.target.value })}\n-                      className=\"flex-1 px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n-                    />\n-                  </div>\n-                  <input\n-                    type=\"date\"\n-                    value={newDomain.expiryDate}\n-                    onChange={(e) => setNewDomain({ ...newDomain, expiryDate: e.target.value })}\n-                    className=\"w-full px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-blue-400\"\n-                  />\n-                  <div className=\"flex items-center\">\n-                    <input\n-                      type=\"checkbox\"\n-                      id=\"autoRenewal\"\n-                      checked={newDomain.autoRenewal}\n-                      onChange={(e) => setNewDomain({ ...newDomain, autoRenewal: e.target.checked })}\n-                      className=\"mr-2\"\n-                    />\n-                    <label htmlFor=\"autoRenewal\" className=\"text-white/80 text-sm\">Auto-renewal enabled</label>\n-                  </div>\n-                  <button\n-                    onClick={addDomain}\n-                    className=\"w-full p-2 bg-blue-500/30 rounded-xl text-white hover:bg-blue-500/40 transition-all duration-300\"\n-                  >\n-                    Add Domain\n-                  </button>\n-                </div>\n-              )}\n-\n-              {/* Domain List */}\n-              {domains.length > 0 && (\n-                <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n-                  {domains.map(domain => {\n-                    const daysLeft = getDaysUntilExpiry(domain.expiryDate);\n-                    const statusColor = getStatusColor(daysLeft);\n-                    const statusBg = getStatusBg(daysLeft);\n-\n-                    return (\n-                      <div key={domain.id} className={`p-3 ${statusBg} backdrop-blur-sm rounded-xl border border-white/20 relative`}>\n-                        <div className=\"flex justify-between items-start\">\n-                          <div className=\"flex-1\">\n-                            <div className=\"flex items-center gap-2 mb-1\">\n-                              <h4 className=\"text-white font-medium\">{domain.name}</h4>\n-                              {domain.autoRenewal && (\n-                                <span className=\"text-xs bg-green-500/30 text-green-300 px-2 py-1 rounded-full\">Auto</span>\n-                              )}\n-                            </div>\n-                            <p className=\"text-white/60 text-sm\">{domain.provider}</p>\n-                            <div className=\"flex items-center gap-4 mt-2\">\n-                              <span className={`text-sm font-medium ${statusColor}`}>\n-                                <Clock className=\"w-3 h-3 inline mr-1\" />\n-                                {daysLeft < 0 ? 'Expired' :\n-                                  daysLeft === 0 ? 'Expires Today!' :\n-                                    daysLeft === 1 ? 'Expires Tomorrow!' :\n-                                      `${daysLeft} days left`}\n-                              </span>\n-                              {domain.renewalCost > 0 && (\n-                                <span className=\"text-white/60 text-sm\">\n-                                  {formatCurrency(domain.renewalCost)}/year\n-                                </span>\n-                              )}\n-                            </div>\n-                          </div>\n-                          <button\n-                            onClick={() => removeDomain(domain.id)}\n-                            className=\"p-1 text-red-400 hover:bg-red-400/20 rounded-lg transition-all duration-300\"\n-                          >\n-                            <Trash2 className=\"w-4 h-4\" />\n-                          </button>\n-                        </div>\n-                      </div>\n-                    );\n-                  })}\n-                </div>\n-              )}\n-            </div>\n-          </div>\n-\n-          {/* Right Column - Results */}\n-          <div className=\"lg:col-span-2 space-y-6\">\n-            {/* Current Subscriptions */}\n-            {subscriptions.length > 0 && (\n-              <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n-                <h3 className=\"text-white font-semibold mb-4 flex items-center\">\n-                  <BarChart3 className=\"w-5 h-5 mr-2\" />\n-                  Your Subscriptions\n-                </h3>\n-\n-                <div className=\"space-y-3\">\n-                  {subscriptions.map((sub) => {\n-                    const yearlyCost = calculateYearlyCost(sub.price, sub.period);\n-                    return (\n-                      <div key={sub.id} className=\"p-4 bg-white/10 backdrop-blur-sm rounded-xl border border-white/20\">\n-                        <div className=\"flex justify-between items-start mb-2\">\n-                          <div className=\"flex-1\">\n-                            <h4 className=\"text-white font-medium\">{sub.name}</h4>\n-                            <p className=\"text-white/60 text-sm\">\n-                              {formatCurrency(sub.price)} per {sub.period}\n-                            </p>\n-                          </div>\n-                          <button\n-                            onClick={() => removeSubscription(sub.id)}\n-                            className=\"p-2 text-red-400 hover:bg-red-400/20 rounded-lg transition-all duration-300\"\n-                          >\n-                            <Trash2 className=\"w-4 h-4\" />\n-                          </button>\n-                        </div>\n-                        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n-                          <div className=\"text-center p-2 bg-white/10 rounded-lg\">\n-                            <p className=\"text-white/60\">Yearly Cost</p>\n-                            <p className=\"text-white font-semibold\">{formatCurrency(yearlyCost)}</p>\n-                          </div>\n-                          <div className=\"text-center p-2 bg-white/10 rounded-lg\">\n-                            <p className=\"text-white/60\">{projectionYears}yr Total</p>\n-                            <p className=\"text-white font-semibold\">{formatCurrency(yearlyCost * projectionYears)}</p>\n-                          </div>\n-                        </div>\n-                      </div>\n-                    );\n-                  })}\n-                </div>\n-              </div>\n-            )}\n-\n-            {/* Total Summary */}\n-            {subscriptions.length > 0 && (\n-              <div className=\"backdrop-blur-lg bg-gradient-to-br from-white/20 to-white/10 border border-white/30 rounded-2xl p-6 shadow-xl\">\n-                <h3 className=\"text-white font-semibold mb-6 flex items-center text-xl\">\n-                  <TrendingUp className=\"w-6 h-6 mr-2\" />\n-                  Cost Summary\n-                </h3>\n-\n-                <div className=\"grid md:grid-cols-3 gap-4 mb-6\">\n-                  <div className=\"text-center p-4 bg-white/10 rounded-xl backdrop-blur-sm\">\n-                    <p className=\"text-white/80 text-sm mb-1\">Monthly Total</p>\n-                    <p className=\"text-2xl font-bold text-green-300\">{formatCurrency(getTotalCosts().monthly)}</p>\n-                  </div>\n-                  <div className=\"text-center p-4 bg-white/10 rounded-xl backdrop-blur-sm\">\n-                    <p className=\"text-white/80 text-sm mb-1\">Yearly Total</p>\n-                    <p className=\"text-2xl font-bold text-blue-300\">{formatCurrency(getTotalCosts().yearly)}</p>\n-                  </div>\n-                  <div className=\"text-center p-4 bg-gradient-to-r from-purple-500/30 to-pink-500/30 rounded-xl backdrop-blur-sm border border-white/20\">\n-                    <p className=\"text-white/80 text-sm mb-1\">{projectionYears}-Year Total</p>\n-                    <p className=\"text-3xl font-bold text-white\">{formatCurrency(getTotalCosts().projection)}</p>\n-                  </div>\n-                </div>\n-\n-                {/* Insights */}\n-                <div className=\"backdrop-blur-sm bg-white/10 rounded-xl p-4 border border-white/20\">\n-                  <h4 className=\"text-white font-medium mb-3 flex items-center\">\n-                    <AlertCircle className=\"w-5 h-5 mr-2\" />\n-                    Reality Check\n-                  </h4>\n-                  <div className=\"space-y-2 text-white/80\">\n-                    <p>💰 You spend <strong>{formatCurrency(getInsights().dailyCost)}</strong> per day on subscriptions</p>\n-                    <p>✈️ Your subscriptions cost equals a vacation every <strong>{getInsights().vacationEquivalent}</strong> years</p>\n-                    <p>☕ That's like buying <strong>{getInsights().coffeeEquivalent}</strong> coffees per day</p>\n-                  </div>\n-                </div>\n-              </div>\n-            )}\n-\n-            {/* Empty State */}\n-            {subscriptions.length === 0 && (\n-              <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-12 shadow-xl text-center\">\n-                <PieChart className=\"w-16 h-16 text-white/40 mx-auto mb-4\" />\n-                <h3 className=\"text-white text-xl font-semibold mb-2\">No Subscriptions Yet</h3>\n-                <p className=\"text-white/70 mb-6\">Add your first subscription to see the lifetime cost analysis</p>\n-                <button\n-                  onClick={() => setShowAddForm(true)}\n-                  className=\"px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl text-white font-medium hover:from-purple-600 hover:to-pink-600 transition-all duration-300 transform hover:scale-105\"\n-                >\n-                  Get Started\n-                </button>\n-              </div>\n-            )}\n-          </div>\n-        </div>\n-      </div>\n-\n-      {/* <style jsx={true}>{`\n-        .slider::-webkit-slider-thumb {\n-          appearance: none;\n-          width: 20px;\n-          height: 20px;\n-          border-radius: 50%;\n-          background: linear-gradient(135deg, #8b5cf6, #ec4899);\n-          cursor: pointer;\n-          box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3);\n-        }\n-        \n-        .slider::-moz-range-thumb {\n-          width: 20px;\n-          height: 20px;\n-          border-radius: 50%;\n-          background: linear-gradient(135deg, #8b5cf6, #ec4899);\n-          cursor: pointer;\n-          border: none;\n-          box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3);\n-        }\n-        \n-        option {\n-          background: #1e1b4b;\n-          color: white;\n-        }\n-      `}</style> */}\n-    </div>\n-  );\n-};\n-\n export default SubscriptionCalculator;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756977437451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,12 @@\n import React, { useState, useEffect } from 'react';\n import { Calculator, Plus, Trash2, DollarSign, TrendingUp, PieChart, BarChart3, AlertCircle, Target, Globe, Clock, Bell } from 'lucide-react';\n import './caclulator.css'\n-import { popularServices } from '../../store/subscriptionStore';\n \n+\n const SubscriptionCalculator = () => {\n+  const firstName = useStore(store, (state) => state.firstName)\n+\n   const [subscriptions, setSubscriptions] = useState([]);\n   const [domains, setDomains] = useState([]);\n   const [showAddForm, setShowAddForm] = useState(false);\n   const [showDomainForm, setShowDomainForm] = useState(false);\n"
                },
                {
                    "date": 1756977443106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React, { useState, useEffect } from 'react';\n import { Calculator, Plus, Trash2, DollarSign, TrendingUp, PieChart, BarChart3, AlertCircle, Target, Globe, Clock, Bell } from 'lucide-react';\n import './caclulator.css'\n+import { useStore } from '@tanstack/react-store';\n \n \n const SubscriptionCalculator = () => {\n   const firstName = useStore(store, (state) => state.firstName)\n"
                },
                {
                    "date": 1756977484156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { useStore } from '@tanstack/react-store';\n \n \n const SubscriptionCalculator = () => {\n-  const firstName = useStore(store, (state) => state.firstName)\n+  const firstName = useStore(store, (state) => state.)\n \n   const [subscriptions, setSubscriptions] = useState([]);\n   const [domains, setDomains] = useState([]);\n   const [showAddForm, setShowAddForm] = useState(false);\n"
                },
                {
                    "date": 1756977519055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { useStore } from '@tanstack/react-store';\n \n \n const SubscriptionCalculator = () => {\n-  const firstName = useStore(store, (state) => state.)\n+  const firstName = useStore(servisesStore, (state) => state.)\n \n   const [subscriptions, setSubscriptions] = useState([]);\n   const [domains, setDomains] = useState([]);\n   const [showAddForm, setShowAddForm] = useState(false);\n"
                },
                {
                    "date": 1756977529233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n import React, { useState, useEffect } from 'react';\n import { Calculator, Plus, Trash2, DollarSign, TrendingUp, PieChart, BarChart3, AlertCircle, Target, Globe, Clock, Bell } from 'lucide-react';\n import './caclulator.css'\n import { useStore } from '@tanstack/react-store';\n+import { servisesStore } from '@/store/subscriptionStore';\n \n \n const SubscriptionCalculator = () => {\n-  const firstName = useStore(servisesStore, (state) => state.)\n+  const firstName = useStore(servisesStore, (state) => state.se)\n \n   const [subscriptions, setSubscriptions] = useState([]);\n   const [domains, setDomains] = useState([]);\n   const [showAddForm, setShowAddForm] = useState(false);\n"
                },
                {
                    "date": 1756977568025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { servisesStore } from '@/store/subscriptionStore';\n \n \n const SubscriptionCalculator = () => {\n-  const firstName = useStore(servisesStore, (state) => state.se)\n+  const firstName = useStore(servisesStore, (state) => state.popularServices)\n \n   const [subscriptions, setSubscriptions] = useState([]);\n   const [domains, setDomains] = useState([]);\n   const [showAddForm, setShowAddForm] = useState(false);\n"
                },
                {
                    "date": 1756980571982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { servisesStore } from '@/store/subscriptionStore';\n \n \n const SubscriptionCalculator = () => {\n-  const firstName = useStore(servisesStore, (state) => state.popularServices)\n+  const popularServices = useStore(subscriptionStore, (state) => state.popularServices)\n \n   const [subscriptions, setSubscriptions] = useState([]);\n   const [domains, setDomains] = useState([]);\n   const [showAddForm, setShowAddForm] = useState(false);\n"
                },
                {
                    "date": 1756981162635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,68 @@\n-import React, { useState, useEffect } from 'react';\n-import { Calculator, Plus, Trash2, DollarSign, TrendingUp, PieChart, BarChart3, AlertCircle, Target, Globe, Clock, Bell } from 'lucide-react';\n-import './caclulator.css'\n+import React, { useState } from 'react';\n+import {\n+  Calculator,\n+  Plus,\n+  Trash2,\n+  TrendingUp,\n+  PieChart,\n+  BarChart3,\n+  AlertCircle,\n+  Target,\n+  Globe,\n+  Clock,\n+  Bell,\n+  Edit,\n+} from 'lucide-react';\n+import './caclulator.css';\n import { useStore } from '@tanstack/react-store';\n-import { servisesStore } from '@/store/subscriptionStore';\n+import {\n+  subscriptionStore,\n+  addSubscription as addSubscriptionToAction,\n+  removeSubscription as removeSubscriptionFromAction,\n+  updateSubscription as updateSubscriptionAction,\n+  Subscription,\n+} from '@/store/subscriptionStore';\n+import EditSubscriptionModal from './EditSubscriptionModal';\n \n-\n const SubscriptionCalculator = () => {\n-  const popularServices = useStore(subscriptionStore, (state) => state.popularServices)\n+  const { popularServices, subscriptions } = useStore(subscriptionStore, (state) => state);\n \n-  const [subscriptions, setSubscriptions] = useState([]);\n   const [domains, setDomains] = useState([]);\n   const [showAddForm, setShowAddForm] = useState(false);\n   const [showDomainForm, setShowDomainForm] = useState(false);\n   const [projectionYears, setProjectionYears] = useState(5);\n   const [currency, setCurrency] = useState('USD');\n \n+  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n+  const [editingSubscription, setEditingSubscription] = useState<Subscription | null>(null);\n+\n   const [newSub, setNewSub] = useState({\n     name: '',\n     price: '',\n-    period: 'monthly',\n-    isCustom: true\n+    period: 'monthly' as 'monthly' | 'yearly',\n   });\n \n   const [newDomain, setNewDomain] = useState({\n     name: '',\n     provider: 'Cloudflare',\n     expiryDate: '',\n     renewalCost: '',\n-    autoRenewal: false\n+    autoRenewal: false,\n   });\n \n-\n   const periods = {\n     weekly: { multiplier: 52, label: 'Weekly' },\n     monthly: { multiplier: 12, label: 'Monthly' },\n     quarterly: { multiplier: 4, label: 'Quarterly' },\n     'half-yearly': { multiplier: 2, label: 'Half-yearly' },\n-    yearly: { multiplier: 1, label: 'Yearly' }\n+    yearly: { multiplier: 1, label: 'Yearly' },\n   };\n \n   const currencies = {\n     USD: { symbol: '$', rate: 1 },\n     EUR: { symbol: '€', rate: 0.85 },\n-    UAH: { symbol: '₴', rate: 37 }\n+    UAH: { symbol: '₴', rate: 37 },\n   };\n \n   const formatCurrency = (amount: number) => {\n     const symbol = currencies[currency].symbol;\n@@ -54,25 +73,34 @@\n   const calculateYearlyCost = (price, period) => {\n     return price * periods[period].multiplier;\n   };\n \n-  const addSubscription = (service) => {\n-    const id = Date.now() + Math.random();\n-    setSubscriptions([...subscriptions, { ...service, id }]);\n+  const addSubscription = (service: Omit<Subscription, 'id'>) => {\n+    addSubscriptionToAction({ ...service });\n   };\n \n   const addCustomSubscription = () => {\n     if (newSub.name && newSub.price) {\n       addSubscription({\n         ...newSub,\n         price: parseFloat(newSub.price),\n-        id: Date.now()\n       });\n-      setNewSub({ name: '', price: '', period: 'monthly', isCustom: true });\n+      setNewSub({ name: '', price: '', period: 'monthly' });\n       setShowAddForm(false);\n     }\n   };\n \n+  const handleEditClick = (sub: Subscription) => {\n+    setEditingSubscription(sub);\n+    setIsEditModalOpen(true);\n+  };\n+\n+  const handleSaveSubscription = (updatedSubscription: Subscription) => {\n+    updateSubscriptionAction(updatedSubscription.name, updatedSubscription);\n+    setIsEditModalOpen(false);\n+    setEditingSubscription(null);\n+  };\n+\n   const addDomain = () => {\n     if (newDomain.name && newDomain.expiryDate) {\n       const id = Date.now() + Math.random();\n       setDomains([...domains, { ...newDomain, id, renewalCost: parseFloat(newDomain.renewalCost) || 0 }]);\n@@ -81,24 +109,26 @@\n     }\n   };\n \n   const removeDomain = (id) => {\n-    setDomains(domains.filter(domain => domain.id !== id));\n+    setDomains(domains.filter((domain) => domain.id !== id));\n   };\n \n   const getDaysUntilExpiry = (expiryDate) => {\n     const today = new Date();\n     const expiry = new Date(expiryDate);\n-    const diffTime = expiry - today;\n+    const diffTime = expiry.getTime() - today.getTime();\n     const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n     return diffDays;\n   };\n \n   const getExpiringDomains = () => {\n-    return domains.filter(domain => {\n-      const daysLeft = getDaysUntilExpiry(domain.expiryDate);\n-      return daysLeft <= 30 && daysLeft >= 0;\n-    }).sort((a, b) => getDaysUntilExpiry(a.expiryDate) - getDaysUntilExpiry(b.expiryDate));\n+    return domains\n+      .filter((domain) => {\n+        const daysLeft = getDaysUntilExpiry(domain.expiryDate);\n+        return daysLeft <= 30 && daysLeft >= 0;\n+      })\n+      .sort((a, b) => getDaysUntilExpiry(a.expiryDate) - getDaysUntilExpiry(b.expiryDate));\n   };\n \n   const getStatusColor = (daysLeft) => {\n     if (daysLeft < 0) return 'text-gray-400'; // Expired\n@@ -115,39 +145,33 @@\n     if (daysLeft <= 30) return 'bg-yellow-500/20';\n     return 'bg-green-500/20';\n   };\n \n-  const removeSubscription = (id: string | number) => {\n-    setSubscriptions(subscriptions.filter(sub => sub.id !== id));\n+  const removeSubscription = (name: string) => {\n+    removeSubscriptionFromAction(name);\n   };\n \n-  const updateSubscription = (id: any, field: any, value: any) => {\n-    setSubscriptions(subscriptions.map(sub =>\n-      sub.id === id ? { ...sub, [field]: value } : sub\n-    ));\n-  };\n-\n   const getTotalCosts = () => {\n     const yearlyTotal = subscriptions.reduce((total, sub) => {\n       return total + calculateYearlyCost(sub.price, sub.period);\n     }, 0);\n \n     return {\n       yearly: yearlyTotal,\n       projection: yearlyTotal * projectionYears,\n-      monthly: yearlyTotal / 12\n+      monthly: yearlyTotal / 12,\n     };\n   };\n \n   const getInsights = () => {\n     const totals = getTotalCosts();\n     const vacationCost = 3000; // Average vacation cost\n-    const yearsForVacation = Math.ceil(vacationCost / totals.yearly);\n+    const yearsForVacation = totals.yearly > 0 ? Math.ceil(vacationCost / totals.yearly) : 0;\n \n     return {\n       vacationEquivalent: yearsForVacation,\n       dailyCost: totals.yearly / 365,\n-      coffeeEquivalent: Math.floor(totals.yearly / (5 * 365)) // $5 coffee\n+      coffeeEquivalent: totals.yearly > 0 ? Math.floor(totals.yearly / (5 * 365)) : 0, // $5 coffee\n     };\n   };\n \n   return (\n@@ -266,13 +290,15 @@\n                       className=\"flex-1 px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-purple-400\"\n                     />\n                     <select\n                       value={newSub.period}\n-                      onChange={(e) => setNewSub({ ...newSub, period: e.target.value })}\n+                      onChange={(e) => setNewSub({ ...newSub, period: e.target.value as 'monthly' | 'yearly' })}\n                       className=\"px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-400\"\n                     >\n                       {Object.entries(periods).map(([key, value]) => (\n-                        <option key={key} value={key}>{value.label}</option>\n+                        <option key={key} value={key}>\n+                          {value.label}\n+                        </option>\n                       ))}\n                     </select>\n                   </div>\n                   <button\n@@ -298,13 +324,14 @@\n                   <div className=\"flex items-center text-red-300 mb-2\">\n                     <Bell className=\"w-4 h-4 mr-2\" />\n                     <span className=\"font-medium\">Renewal Alerts</span>\n                   </div>\n-                  {getExpiringDomains().map(domain => {\n+                  {getExpiringDomains().map((domain) => {\n                     const daysLeft = getDaysUntilExpiry(domain.expiryDate);\n                     return (\n                       <div key={domain.id} className=\"text-sm text-white/90 mb-1\">\n-                        <strong>{domain.name}</strong> expires in {daysLeft === 0 ? 'TODAY' : daysLeft === 1 ? 'TOMORROW' : `${daysLeft} days`}\n+                        <strong>{domain.name}</strong> expires in{' '}\n+                        {daysLeft === 0 ? 'TODAY' : daysLeft === 1 ? 'TOMORROW' : `${daysLeft} days`}\n                         {daysLeft === 1 && ' 🚨'}\n                       </div>\n                     );\n                   })}\n@@ -361,9 +388,11 @@\n                       checked={newDomain.autoRenewal}\n                       onChange={(e) => setNewDomain({ ...newDomain, autoRenewal: e.target.checked })}\n                       className=\"mr-2\"\n                     />\n-                    <label htmlFor=\"autoRenewal\" className=\"text-white/80 text-sm\">Auto-renewal enabled</label>\n+                    <label htmlFor=\"autoRenewal\" className=\"text-white/80 text-sm\">\n+                      Auto-renewal enabled\n+                    </label>\n                   </div>\n                   <button\n                     onClick={addDomain}\n                     className=\"w-full p-2 bg-blue-500/30 rounded-xl text-white hover:bg-blue-500/40 transition-all duration-300\"\n@@ -375,31 +404,39 @@\n \n               {/* Domain List */}\n               {domains.length > 0 && (\n                 <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n-                  {domains.map(domain => {\n+                  {domains.map((domain) => {\n                     const daysLeft = getDaysUntilExpiry(domain.expiryDate);\n                     const statusColor = getStatusColor(daysLeft);\n                     const statusBg = getStatusBg(daysLeft);\n \n                     return (\n-                      <div key={domain.id} className={`p-3 ${statusBg} backdrop-blur-sm rounded-xl border border-white/20 relative`}>\n+                      <div\n+                        key={domain.id}\n+                        className={`p-3 ${statusBg} backdrop-blur-sm rounded-xl border border-white/20 relative`}\n+                      >\n                         <div className=\"flex justify-between items-start\">\n                           <div className=\"flex-1\">\n                             <div className=\"flex items-center gap-2 mb-1\">\n                               <h4 className=\"text-white font-medium\">{domain.name}</h4>\n                               {domain.autoRenewal && (\n-                                <span className=\"text-xs bg-green-500/30 text-green-300 px-2 py-1 rounded-full\">Auto</span>\n+                                <span className=\"text-xs bg-green-500/30 text-green-300 px-2 py-1 rounded-full\">\n+                                  Auto\n+                                </span>\n                               )}\n                             </div>\n                             <p className=\"text-white/60 text-sm\">{domain.provider}</p>\n                             <div className=\"flex items-center gap-4 mt-2\">\n                               <span className={`text-sm font-medium ${statusColor}`}>\n                                 <Clock className=\"w-3 h-3 inline mr-1\" />\n-                                {daysLeft < 0 ? 'Expired' :\n-                                  daysLeft === 0 ? 'Expires Today!' :\n-                                    daysLeft === 1 ? 'Expires Tomorrow!' :\n-                                      `${daysLeft} days left`}\n+                                {daysLeft < 0\n+                                  ? 'Expired'\n+                                  : daysLeft === 0\n+                                  ? 'Expires Today!'\n+                                  : daysLeft === 1\n+                                  ? 'Expires Tomorrow!'\n+                                  : `${daysLeft} days left`}\n                               </span>\n                               {domain.renewalCost > 0 && (\n                                 <span className=\"text-white/60 text-sm\">\n                                   {formatCurrency(domain.renewalCost)}/year\n@@ -435,22 +472,30 @@\n                 <div className=\"space-y-3\">\n                   {subscriptions.map((sub) => {\n                     const yearlyCost = calculateYearlyCost(sub.price, sub.period);\n                     return (\n-                      <div key={sub.id} className=\"p-4 bg-white/10 backdrop-blur-sm rounded-xl border border-white/20\">\n+                      <div key={sub.name} className=\"p-4 bg-white/10 backdrop-blur-sm rounded-xl border border-white/20\">\n                         <div className=\"flex justify-between items-start mb-2\">\n                           <div className=\"flex-1\">\n                             <h4 className=\"text-white font-medium\">{sub.name}</h4>\n                             <p className=\"text-white/60 text-sm\">\n                               {formatCurrency(sub.price)} per {sub.period}\n                             </p>\n                           </div>\n-                          <button\n-                            onClick={() => removeSubscription(sub.id)}\n-                            className=\"p-2 text-red-400 hover:bg-red-400/20 rounded-lg transition-all duration-300\"\n-                          >\n-                            <Trash2 className=\"w-4 h-4\" />\n-                          </button>\n+                          <div className=\"flex items-center gap-2\">\n+                            <button\n+                              onClick={() => handleEditClick(sub)}\n+                              className=\"p-2 text-blue-400 hover:bg-blue-400/20 rounded-lg transition-all duration-300\"\n+                            >\n+                              <Edit className=\"w-4 h-4\" />\n+                            </button>\n+                            <button\n+                              onClick={() => removeSubscription(sub.name)}\n+                              className=\"p-2 text-red-400 hover:bg-red-400/20 rounded-lg transition-all duration-300\"\n+                            >\n+                              <Trash2 className=\"w-4 h-4\" />\n+                            </button>\n+                          </div>\n                         </div>\n                         <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                           <div className=\"text-center p-2 bg-white/10 rounded-lg\">\n                             <p className=\"text-white/60\">Yearly Cost</p>\n@@ -497,11 +542,18 @@\n                     <AlertCircle className=\"w-5 h-5 mr-2\" />\n                     Reality Check\n                   </h4>\n                   <div className=\"space-y-2 text-white/80\">\n-                    <p>💰 You spend <strong>{formatCurrency(getInsights().dailyCost)}</strong> per day on subscriptions</p>\n-                    <p>✈️ Your subscriptions cost equals a vacation every <strong>{getInsights().vacationEquivalent}</strong> years</p>\n-                    <p>☕ That's like buying <strong>{getInsights().coffeeEquivalent}</strong> coffees per day</p>\n+                    <p>\n+                      💰 You spend <strong>{formatCurrency(getInsights().dailyCost)}</strong> per day on subscriptions\n+                    </p>\n+                    <p>\n+                      ✈️ Your subscriptions cost equals a vacation every{' '}\n+                      <strong>{getInsights().vacationEquivalent}</strong> years\n+                    </p>\n+                    <p>\n+                      ☕ That's like buying <strong>{getInsights().coffeeEquivalent}</strong> coffees per day\n+                    </p>\n                   </div>\n                 </div>\n               </div>\n             )}\n@@ -522,36 +574,15 @@\n             )}\n           </div>\n         </div>\n       </div>\n-\n-      {/* <style jsx={true}>{`\n-        .slider::-webkit-slider-thumb {\n-          appearance: none;\n-          width: 20px;\n-          height: 20px;\n-          border-radius: 50%;\n-          background: linear-gradient(135deg, #8b5cf6, #ec4899);\n-          cursor: pointer;\n-          box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3);\n-        }\n-        \n-        .slider::-moz-range-thumb {\n-          width: 20px;\n-          height: 20px;\n-          border-radius: 50%;\n-          background: linear-gradient(135deg, #8b5cf6, #ec4899);\n-          cursor: pointer;\n-          border: none;\n-          box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3);\n-        }\n-        \n-        option {\n-          background: #1e1b4b;\n-          color: white;\n-        }\n-      `}</style> */}\n+      <EditSubscriptionModal\n+        isOpen={isEditModalOpen}\n+        onClose={() => setIsEditModalOpen(false)}\n+        subscription={editingSubscription}\n+        onSave={handleSaveSubscription}\n\\ No newline at end of file\n+      />\n     </div>\n   );\n };\n \n-export default SubscriptionCalculator;\n+export default SubscriptionCalculator;\n"
                },
                {
                    "date": 1756981298660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n   subscriptionStore,\n   addSubscription as addSubscriptionToAction,\n   removeSubscription as removeSubscriptionFromAction,\n   updateSubscription as updateSubscriptionAction,\n-  Subscription,\n+  type Subscription,\n } from '@/store/subscriptionStore';\n import EditSubscriptionModal from './EditSubscriptionModal';\n \n const SubscriptionCalculator = () => {\n@@ -584,5 +584,5 @@\n     </div>\n   );\n };\n \n-export default SubscriptionCalculator;\n\\ No newline at end of file\n+export default SubscriptionCalculator;\n"
                },
                {
                    "date": 1756981340444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -574,14 +574,16 @@\n             )}\n           </div>\n         </div>\n       </div>\n+\n       <EditSubscriptionModal\n         isOpen={isEditModalOpen}\n         onClose={() => setIsEditModalOpen(false)}\n         subscription={editingSubscription}\n         onSave={handleSaveSubscription}\n       />\n+      \n     </div>\n   );\n };\n \n"
                },
                {
                    "date": 1756981799788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n \n   const currencies = {\n     USD: { symbol: '$', rate: 1 },\n     EUR: { symbol: '€', rate: 0.85 },\n-    UAH: { symbol: '₴', rate: 37 },\n+    UAH: { symbol: '₴', rate: 41 },\n   };\n \n   const formatCurrency = (amount: number) => {\n     const symbol = currencies[currency].symbol;\n"
                }
            ],
            "date": 1756975394785,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\nimport { Calculator, Plus, Trash2, DollarSign, TrendingUp, PieChart, BarChart3, AlertCircle, Target, Globe, Clock, Bell } from 'lucide-react';\nimport './caclulator.css'\n\nconst SubscriptionCalculator = () => {\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [domains, setDomains] = useState([]);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showDomainForm, setShowDomainForm] = useState(false);\n  const [projectionYears, setProjectionYears] = useState(5);\n  const [currency, setCurrency] = useState('USD');\n\n  const [newSub, setNewSub] = useState({\n    name: '',\n    price: '',\n    period: 'monthly',\n    isCustom: true\n  });\n\n  const [newDomain, setNewDomain] = useState({\n    name: '',\n    provider: 'Cloudflare',\n    expiryDate: '',\n    renewalCost: '',\n    autoRenewal: false\n  });\n\n  const popularServices = [\n    { name: 'Netflix', price: 15.49, period: 'monthly' },\n    { name: 'Spotify', price: 10.99, period: 'monthly' },\n    { name: 'Disney+', price: 7.99, period: 'monthly' },\n    { name: 'Amazon Prime', price: 139, period: 'yearly' },\n    { name: 'Apple Music', price: 10.99, period: 'monthly' },\n    { name: 'YouTube Premium', price: 13.99, period: 'monthly' },\n    { name: 'Adobe Creative Cloud', price: 52.99, period: 'monthly' },\n    { name: 'Microsoft 365', price: 69.99, period: 'yearly' },\n    { name: 'Dropbox', price: 9.99, period: 'monthly' },\n    { name: 'Canva Pro', price: 119.99, period: 'yearly' }\n  ];\n\n  const periods = {\n    weekly: { multiplier: 52, label: 'Weekly' },\n    monthly: { multiplier: 12, label: 'Monthly' },\n    quarterly: { multiplier: 4, label: 'Quarterly' },\n    'half-yearly': { multiplier: 2, label: 'Half-yearly' },\n    yearly: { multiplier: 1, label: 'Yearly' }\n  };\n\n  const currencies = {\n    USD: { symbol: '$', rate: 1 },\n    EUR: { symbol: '€', rate: 0.85 },\n    UAH: { symbol: '₴', rate: 37 }\n  };\n\n  const formatCurrency = (amount: number) => {\n    const symbol = currencies[currency].symbol;\n    const convertedAmount = amount * currencies[currency].rate;\n    return `${symbol}${convertedAmount.toFixed(2)}`;\n  };\n\n  const calculateYearlyCost = (price, period) => {\n    return price * periods[period].multiplier;\n  };\n\n  const addSubscription = (service) => {\n    const id = Date.now() + Math.random();\n    setSubscriptions([...subscriptions, { ...service, id }]);\n  };\n\n  const addCustomSubscription = () => {\n    if (newSub.name && newSub.price) {\n      addSubscription({\n        ...newSub,\n        price: parseFloat(newSub.price),\n        id: Date.now()\n      });\n      setNewSub({ name: '', price: '', period: 'monthly', isCustom: true });\n      setShowAddForm(false);\n    }\n  };\n\n  const addDomain = () => {\n    if (newDomain.name && newDomain.expiryDate) {\n      const id = Date.now() + Math.random();\n      setDomains([...domains, { ...newDomain, id, renewalCost: parseFloat(newDomain.renewalCost) || 0 }]);\n      setNewDomain({ name: '', provider: 'Cloudflare', expiryDate: '', renewalCost: '', autoRenewal: false });\n      setShowDomainForm(false);\n    }\n  };\n\n  const removeDomain = (id) => {\n    setDomains(domains.filter(domain => domain.id !== id));\n  };\n\n  const getDaysUntilExpiry = (expiryDate) => {\n    const today = new Date();\n    const expiry = new Date(expiryDate);\n    const diffTime = expiry - today;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays;\n  };\n\n  const getExpiringDomains = () => {\n    return domains.filter(domain => {\n      const daysLeft = getDaysUntilExpiry(domain.expiryDate);\n      return daysLeft <= 30 && daysLeft >= 0;\n    }).sort((a, b) => getDaysUntilExpiry(a.expiryDate) - getDaysUntilExpiry(b.expiryDate));\n  };\n\n  const getStatusColor = (daysLeft) => {\n    if (daysLeft < 0) return 'text-gray-400'; // Expired\n    if (daysLeft <= 1) return 'text-red-400'; // Critical\n    if (daysLeft <= 7) return 'text-orange-400'; // Warning\n    if (daysLeft <= 30) return 'text-yellow-400'; // Attention\n    return 'text-green-400'; // Safe\n  };\n\n  const getStatusBg = (daysLeft) => {\n    if (daysLeft < 0) return 'bg-gray-500/20';\n    if (daysLeft <= 1) return 'bg-red-500/20';\n    if (daysLeft <= 7) return 'bg-orange-500/20';\n    if (daysLeft <= 30) return 'bg-yellow-500/20';\n    return 'bg-green-500/20';\n  };\n\n  const removeSubscription = (id) => {\n    setSubscriptions(subscriptions.filter(sub => sub.id !== id));\n  };\n\n  const updateSubscription = (id, field, value) => {\n    setSubscriptions(subscriptions.map(sub =>\n      sub.id === id ? { ...sub, [field]: value } : sub\n    ));\n  };\n\n  const getTotalCosts = () => {\n    const yearlyTotal = subscriptions.reduce((total, sub) => {\n      return total + calculateYearlyCost(sub.price, sub.period);\n    }, 0);\n\n    return {\n      yearly: yearlyTotal,\n      projection: yearlyTotal * projectionYears,\n      monthly: yearlyTotal / 12\n    };\n  };\n\n  const getInsights = () => {\n    const totals = getTotalCosts();\n    const vacationCost = 3000; // Average vacation cost\n    const yearsForVacation = Math.ceil(vacationCost / totals.yearly);\n\n    return {\n      vacationEquivalent: yearsForVacation,\n      dailyCost: totals.yearly / 365,\n      coffeeEquivalent: Math.floor(totals.yearly / (5 * 365)) // $5 coffee\n    };\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 p-4\">\n      {/* Background Elements */}\n      <div className=\"absolute min-h-screen inset-0\">\n        <div className=\"absolute top-1/4 left-1/4 w-72 h-72 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse\"></div>\n        <div className=\"absolute top-3/4 right-1/4 w-72 h-72 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse delay-1000\"></div>\n        <div className=\"absolute bottom-1/4 left-1/3 w-72 h-72 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse delay-2000\"></div>\n      </div>\n\n      <div className=\"relative max-w-6xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-purple-400 to-pink-400 rounded-2xl mb-4 shadow-lg\">\n            <Calculator className=\"w-8 h-8 text-white\" />\n          </div>\n          <h1 className=\"text-4xl font-bold text-white mb-2\">Subscription Cost Calculator</h1>\n          <p className=\"text-white/70\">Discover the true lifetime cost of your subscriptions</p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-6\">\n          {/* Left Column - Controls */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            {/* Currency & Projection Settings */}\n            <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n              <h3 className=\"text-white font-semibold mb-4 flex items-center\">\n                <Target className=\"w-5 h-5 mr-2\" />\n                Settings\n              </h3>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"text-white/90 text-sm mb-2 block\">Currency</label>\n                  <select\n                    value={currency}\n                    onChange={(e) => setCurrency(e.target.value)}\n                    className=\"w-full px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-400\"\n                  >\n                    <option value=\"USD\">USD ($)</option>\n                    <option value=\"EUR\">EUR (€)</option>\n                    <option value=\"UAH\">UAH (₴)</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"text-white/90 text-sm mb-2 block\">\n                    Projection Years: {projectionYears}\n                  </label>\n                  <input\n                    type=\"range\"\n                    min=\"1\"\n                    max=\"50\"\n                    value={projectionYears}\n                    onChange={(e) => setProjectionYears(parseInt(e.target.value))}\n                    className=\"w-full h-2 bg-white/20 rounded-lg appearance-none slider\"\n                  />\n                  <div className=\"flex justify-between text-white/60 text-xs mt-1\">\n                    <span>1yr</span>\n                    <span>50yrs</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/*SECTION: Popular Services */}\n            <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n              <h3 className=\"text-white font-semibold mb-4 flex items-center\">\n                <Plus className=\"w-5 h-5 mr-2\" />\n                Popular Services\n              </h3>\n\n              <div className=\"space-y-2 max-h-64 overflow-y-auto overflow-x-hidden\">\n                {popularServices.map((service, index) => (\n                  <button\n                    key={index}\n                    onClick={() => addSubscription(service)}\n                    className=\"w-full p-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white text-left hover:bg-white/20 transition-all duration-300 hover:scale-95\"\n                  >\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"font-medium\">{service.name}</span>\n                      <span className=\"text-sm text-white/80\">\n                        {formatCurrency(service.price)}/{service.period}\n                      </span>\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Add Custom Subscription */}\n            <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n              <button\n                onClick={() => setShowAddForm(!showAddForm)}\n                className=\"w-full flex items-center justify-center p-3 bg-gradient-to-r from-purple-500/30 to-pink-500/30 rounded-xl text-white hover:from-purple-500/40 hover:to-pink-500/40 transition-all duration-300\"\n              >\n                <Plus className=\"w-5 h-5 mr-2\" />\n                Add Custom Subscription\n              </button>\n\n              {showAddForm && (\n                <div className=\"mt-4 space-y-3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Service name\"\n                    value={newSub.name}\n                    onChange={(e) => setNewSub({ ...newSub, name: e.target.value })}\n                    className=\"w-full px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-purple-400\"\n                  />\n                  <div className=\"flex gap-2\">\n                    <input\n                      type=\"number\"\n                      placeholder=\"Price\"\n                      value={newSub.price}\n                      onChange={(e) => setNewSub({ ...newSub, price: e.target.value })}\n                      className=\"flex-1 px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-purple-400\"\n                    />\n                    <select\n                      value={newSub.period}\n                      onChange={(e) => setNewSub({ ...newSub, period: e.target.value })}\n                      className=\"px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-400\"\n                    >\n                      {Object.entries(periods).map(([key, value]) => (\n                        <option key={key} value={key}>{value.label}</option>\n                      ))}\n                    </select>\n                  </div>\n                  <button\n                    onClick={addCustomSubscription}\n                    className=\"w-full p-2 bg-green-500/30 rounded-xl text-white hover:bg-green-500/40 transition-all duration-300\"\n                  >\n                    Add Subscription\n                  </button>\n                </div>\n              )}\n            </div>\n\n            {/* Domain Renewal Tracker */}\n            <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n              <h3 className=\"text-white font-semibold mb-4 flex items-center\">\n                <Globe className=\"w-5 h-5 mr-2\" />\n                Domain Renewals\n              </h3>\n\n              {/* Expiring Domains Alert */}\n              {getExpiringDomains().length > 0 && (\n                <div className=\"mb-4 p-3 bg-red-500/20 border border-red-400/30 rounded-xl backdrop-blur-sm\">\n                  <div className=\"flex items-center text-red-300 mb-2\">\n                    <Bell className=\"w-4 h-4 mr-2\" />\n                    <span className=\"font-medium\">Renewal Alerts</span>\n                  </div>\n                  {getExpiringDomains().map(domain => {\n                    const daysLeft = getDaysUntilExpiry(domain.expiryDate);\n                    return (\n                      <div key={domain.id} className=\"text-sm text-white/90 mb-1\">\n                        <strong>{domain.name}</strong> expires in {daysLeft === 0 ? 'TODAY' : daysLeft === 1 ? 'TOMORROW' : `${daysLeft} days`}\n                        {daysLeft === 1 && ' 🚨'}\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n\n              <button\n                onClick={() => setShowDomainForm(!showDomainForm)}\n                className=\"w-full flex items-center justify-center p-3 bg-gradient-to-r from-blue-500/30 to-teal-500/30 rounded-xl text-white hover:from-blue-500/40 hover:to-teal-500/40 transition-all duration-300 mb-4\"\n              >\n                <Plus className=\"w-5 h-5 mr-2\" />\n                Add Domain\n              </button>\n\n              {showDomainForm && (\n                <div className=\"space-y-3 mb-4\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"domain.com\"\n                    value={newDomain.name}\n                    onChange={(e) => setNewDomain({ ...newDomain, name: e.target.value })}\n                    className=\"w-full px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                  />\n                  <div className=\"flex flex-col gap-2\">\n                    <select\n                      value={newDomain.provider}\n                      onChange={(e) => setNewDomain({ ...newDomain, provider: e.target.value })}\n                      className=\"flex-1 px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                    >\n                      <option value=\"Cloudflare\">Cloudflare</option>\n                      <option value=\"GoDaddy\">GoDaddy</option>\n                      <option value=\"Namecheap\">Namecheap</option>\n                      <option value=\"Google Domains\">Google Domains</option>\n                      <option value=\"Other\">Other</option>\n                    </select>\n                    <input\n                      type=\"number\"\n                      placeholder=\"Renewal cost\"\n                      value={newDomain.renewalCost}\n                      onChange={(e) => setNewDomain({ ...newDomain, renewalCost: e.target.value })}\n                      className=\"flex-1 px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                    />\n                  </div>\n                  <input\n                    type=\"date\"\n                    value={newDomain.expiryDate}\n                    onChange={(e) => setNewDomain({ ...newDomain, expiryDate: e.target.value })}\n                    className=\"w-full px-3 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                  />\n                  <div className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"autoRenewal\"\n                      checked={newDomain.autoRenewal}\n                      onChange={(e) => setNewDomain({ ...newDomain, autoRenewal: e.target.checked })}\n                      className=\"mr-2\"\n                    />\n                    <label htmlFor=\"autoRenewal\" className=\"text-white/80 text-sm\">Auto-renewal enabled</label>\n                  </div>\n                  <button\n                    onClick={addDomain}\n                    className=\"w-full p-2 bg-blue-500/30 rounded-xl text-white hover:bg-blue-500/40 transition-all duration-300\"\n                  >\n                    Add Domain\n                  </button>\n                </div>\n              )}\n\n              {/* Domain List */}\n              {domains.length > 0 && (\n                <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n                  {domains.map(domain => {\n                    const daysLeft = getDaysUntilExpiry(domain.expiryDate);\n                    const statusColor = getStatusColor(daysLeft);\n                    const statusBg = getStatusBg(daysLeft);\n\n                    return (\n                      <div key={domain.id} className={`p-3 ${statusBg} backdrop-blur-sm rounded-xl border border-white/20 relative`}>\n                        <div className=\"flex justify-between items-start\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center gap-2 mb-1\">\n                              <h4 className=\"text-white font-medium\">{domain.name}</h4>\n                              {domain.autoRenewal && (\n                                <span className=\"text-xs bg-green-500/30 text-green-300 px-2 py-1 rounded-full\">Auto</span>\n                              )}\n                            </div>\n                            <p className=\"text-white/60 text-sm\">{domain.provider}</p>\n                            <div className=\"flex items-center gap-4 mt-2\">\n                              <span className={`text-sm font-medium ${statusColor}`}>\n                                <Clock className=\"w-3 h-3 inline mr-1\" />\n                                {daysLeft < 0 ? 'Expired' :\n                                  daysLeft === 0 ? 'Expires Today!' :\n                                    daysLeft === 1 ? 'Expires Tomorrow!' :\n                                      `${daysLeft} days left`}\n                              </span>\n                              {domain.renewalCost > 0 && (\n                                <span className=\"text-white/60 text-sm\">\n                                  {formatCurrency(domain.renewalCost)}/year\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                          <button\n                            onClick={() => removeDomain(domain.id)}\n                            className=\"p-1 text-red-400 hover:bg-red-400/20 rounded-lg transition-all duration-300\"\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Right Column - Results */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Current Subscriptions */}\n            {subscriptions.length > 0 && (\n              <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-6 shadow-xl\">\n                <h3 className=\"text-white font-semibold mb-4 flex items-center\">\n                  <BarChart3 className=\"w-5 h-5 mr-2\" />\n                  Your Subscriptions\n                </h3>\n\n                <div className=\"space-y-3\">\n                  {subscriptions.map((sub) => {\n                    const yearlyCost = calculateYearlyCost(sub.price, sub.period);\n                    return (\n                      <div key={sub.id} className=\"p-4 bg-white/10 backdrop-blur-sm rounded-xl border border-white/20\">\n                        <div className=\"flex justify-between items-start mb-2\">\n                          <div className=\"flex-1\">\n                            <h4 className=\"text-white font-medium\">{sub.name}</h4>\n                            <p className=\"text-white/60 text-sm\">\n                              {formatCurrency(sub.price)} per {sub.period}\n                            </p>\n                          </div>\n                          <button\n                            onClick={() => removeSubscription(sub.id)}\n                            className=\"p-2 text-red-400 hover:bg-red-400/20 rounded-lg transition-all duration-300\"\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                          <div className=\"text-center p-2 bg-white/10 rounded-lg\">\n                            <p className=\"text-white/60\">Yearly Cost</p>\n                            <p className=\"text-white font-semibold\">{formatCurrency(yearlyCost)}</p>\n                          </div>\n                          <div className=\"text-center p-2 bg-white/10 rounded-lg\">\n                            <p className=\"text-white/60\">{projectionYears}yr Total</p>\n                            <p className=\"text-white font-semibold\">{formatCurrency(yearlyCost * projectionYears)}</p>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n\n            {/* Total Summary */}\n            {subscriptions.length > 0 && (\n              <div className=\"backdrop-blur-lg bg-gradient-to-br from-white/20 to-white/10 border border-white/30 rounded-2xl p-6 shadow-xl\">\n                <h3 className=\"text-white font-semibold mb-6 flex items-center text-xl\">\n                  <TrendingUp className=\"w-6 h-6 mr-2\" />\n                  Cost Summary\n                </h3>\n\n                <div className=\"grid md:grid-cols-3 gap-4 mb-6\">\n                  <div className=\"text-center p-4 bg-white/10 rounded-xl backdrop-blur-sm\">\n                    <p className=\"text-white/80 text-sm mb-1\">Monthly Total</p>\n                    <p className=\"text-2xl font-bold text-green-300\">{formatCurrency(getTotalCosts().monthly)}</p>\n                  </div>\n                  <div className=\"text-center p-4 bg-white/10 rounded-xl backdrop-blur-sm\">\n                    <p className=\"text-white/80 text-sm mb-1\">Yearly Total</p>\n                    <p className=\"text-2xl font-bold text-blue-300\">{formatCurrency(getTotalCosts().yearly)}</p>\n                  </div>\n                  <div className=\"text-center p-4 bg-gradient-to-r from-purple-500/30 to-pink-500/30 rounded-xl backdrop-blur-sm border border-white/20\">\n                    <p className=\"text-white/80 text-sm mb-1\">{projectionYears}-Year Total</p>\n                    <p className=\"text-3xl font-bold text-white\">{formatCurrency(getTotalCosts().projection)}</p>\n                  </div>\n                </div>\n\n                {/* Insights */}\n                <div className=\"backdrop-blur-sm bg-white/10 rounded-xl p-4 border border-white/20\">\n                  <h4 className=\"text-white font-medium mb-3 flex items-center\">\n                    <AlertCircle className=\"w-5 h-5 mr-2\" />\n                    Reality Check\n                  </h4>\n                  <div className=\"space-y-2 text-white/80\">\n                    <p>💰 You spend <strong>{formatCurrency(getInsights().dailyCost)}</strong> per day on subscriptions</p>\n                    <p>✈️ Your subscriptions cost equals a vacation every <strong>{getInsights().vacationEquivalent}</strong> years</p>\n                    <p>☕ That's like buying <strong>{getInsights().coffeeEquivalent}</strong> coffees per day</p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Empty State */}\n            {subscriptions.length === 0 && (\n              <div className=\"backdrop-blur-lg bg-white/10 border border-white/20 rounded-2xl p-12 shadow-xl text-center\">\n                <PieChart className=\"w-16 h-16 text-white/40 mx-auto mb-4\" />\n                <h3 className=\"text-white text-xl font-semibold mb-2\">No Subscriptions Yet</h3>\n                <p className=\"text-white/70 mb-6\">Add your first subscription to see the lifetime cost analysis</p>\n                <button\n                  onClick={() => setShowAddForm(true)}\n                  className=\"px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl text-white font-medium hover:from-purple-600 hover:to-pink-600 transition-all duration-300 transform hover:scale-105\"\n                >\n                  Get Started\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* <style jsx={true}>{`\n        .slider::-webkit-slider-thumb {\n          appearance: none;\n          width: 20px;\n          height: 20px;\n          border-radius: 50%;\n          background: linear-gradient(135deg, #8b5cf6, #ec4899);\n          cursor: pointer;\n          box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3);\n        }\n        \n        .slider::-moz-range-thumb {\n          width: 20px;\n          height: 20px;\n          border-radius: 50%;\n          background: linear-gradient(135deg, #8b5cf6, #ec4899);\n          cursor: pointer;\n          border: none;\n          box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3);\n        }\n        \n        option {\n          background: #1e1b4b;\n          color: white;\n        }\n      `}</style> */}\n    </div>\n  );\n};\n\nexport default SubscriptionCalculator;"
        }
    ]
}